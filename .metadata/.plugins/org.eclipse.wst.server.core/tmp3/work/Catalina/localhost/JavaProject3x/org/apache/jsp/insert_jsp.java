/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2022-08-06 07:55:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>INSERT</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>INSERT RECORD</h2>\r\n");
      out.write("<br>\r\n");
      out.write("<form action=\"InsertController\" method=\"post\">\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>ID Number</td><td>:</td>\r\n");
      out.write("<td><input type=\"text\" name=\"idNo\" id=\"idNo\" required>\r\n");
      out.write("\r\n");
      out.write("<select name=\"idType\" id=\"idType\">\r\n");
      out.write("<option value=\"empty\"></option>\r\n");
      out.write("<option value=\"UIN\">UIN</option>\r\n");
      out.write("<option value=\"FIN\">FIN</option>\r\n");
      out.write("<option value=\"PPN\">PPN</option>\r\n");
      out.write("<option value=\"XIN\">XIN</option>\r\n");
      out.write("</select></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Name</td><td>:</td>\r\n");
      out.write("<td><input type=\"text\" name=\"name\" id=\"name\" required></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Relationship</td><td>:</td>\r\n");
      out.write("<td><select name=\"relation\" id=\"relation\" required>\r\n");
      out.write("<option value=\"empty\"></option>\r\n");
      out.write("<option value=\"spouse\">Husband/Wife</option>\r\n");
      out.write("<option value=\"kid\">Son/Daughter</option>\r\n");
      out.write("<option value=\"sibbling\">Brother/Sister</option>\r\n");
      out.write("<option value=\"parents\">Father/Mother</option>\r\n");
      out.write("</select></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Gender</td><td>:</td>\r\n");
      out.write("<td><input type=\"radio\" name=\"gender\" id=\"gender\" value=\"male\">Male\r\n");
      out.write("<input type=\"radio\" name=\"gender\" id=\"gender\" value=\"female\">Female\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Date of Birth</td><td>:</td>\r\n");
      out.write("<td><input type=\"date\" name=\"dob\" id=\"dob\"  placeholder=\"dd-mm-yyyy\" required></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Citizenship</td><td>:</td>\r\n");
      out.write("<td><select name=\"citizen\" id=\"citizen\" required onchange=\"citizenshipChange();\">\r\n");
      out.write("<option value=\"empty\"></option>\r\n");
      out.write("<option value=\"sc\">Singapore Citizen</option>\r\n");
      out.write("<option value=\"spr\">Singapore Permanent citizen</option>\r\n");
      out.write("<option value=\"nc\">Non citizen</option>\r\n");
      out.write("</select></td></tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td colspan=\"3\">\r\n");
      out.write("Applicable for occupier who is a non-citizen with>=6 months visit pass\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Card Type</td><td>:</td>\r\n");
      out.write("<td><select name=\"cardType\" id=\"cardType\">\r\n");
      out.write("<option value=\"empty\"></option>\r\n");
      out.write("<option value=\"svp\">Social Visit Pass</option>\r\n");
      out.write("<option value=\"wp\">Work Permit</option>\r\n");
      out.write("<option value=\"ep\">Employment Pass</option>\r\n");
      out.write("<option value=\"dp\">Dependent Pass</option>\r\n");
      out.write("<option value=\"sp\">Student Pass</option>\r\n");
      out.write("</select></td>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Date of Issue</td><td>:</td>\r\n");
      out.write("<td><input type=\"date\" name=\"doi\" id=\"doi\" placeholder=\"dd-mm-yyyy\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td>Expiry Date</td><td>:</td>\r\n");
      out.write("<td><input type=\"date\" name=\"expiry\" id=\"expiry\"  placeholder=\"dd-mm-yyyy\" ></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<td><input type=\"submit\" name=\"submit\" value=\"Submit\"></td>\r\n");
      out.write("<td><input type=\"reset\" name=\"reset\" value=\"Reset\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function citizenshipChange()\r\n");
      out.write("{\r\n");
      out.write("	var citizenship =document.getElementById(\"citizen\").value;\r\n");
      out.write("	alert(citizenship);\r\n");
      out.write("	if(citizenship==\"nc\")\r\n");
      out.write("		{\r\n");
      out.write("		alert('NC');\r\n");
      out.write("		document.getElementById(\"cardType\").disabled=true;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
